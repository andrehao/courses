Utilizando funÃ§Ãµes de agregaÃ§Ã£o com GROUP BY no SQL
30 de marÃ§o de 2016/Infra /Nenhum ComentÃ¡rio
Nesses Ãºltimos tempos eu resolvi cadastrar todos os livros que comprei no perÃ­odo de 2015 a 2016 em um banco de dados. EntÃ£o eu criei uma tabela livros e inseri todas as compras que realizei:

SELECT * FROM livros;
 
+----+--------------------+----------------------+-------+-------------+
| id | nome               | autor                | valor | data_compra |
+----+--------------------+----------------------+-------+-------------+
|  1 | Plataforma Java EE | Alberto Souza        | 39.90 | 2015-12-05  |
|  2 | Google Android     | JoÃ£o Bosco Monteiro  | 25.90 | 2015-12-10  |
|  3 | Spring MVC         | Alberto Souza        | 45.90 | 2015-12-20  |
|  4 | A Web Mobile       | Sergio Lopes         | 26.90 | 2016-01-04  |
|  5 | REST               | Alexandre Saudate    | 39.90 | 2015-01-12  |
|  6 | SQL                | AEduardo GonÃ§alves   | 23.90 | 2015-12-05  |
+----+--------------------+----------------------+-------+-------------+
6 rows in set (0,00 sec)
Ã“timo!
Os livros que eu comprei estÃ£o bem organizados. Posso atÃ© fazer queries para verificar, por exemplo, quais foram os livros que eu paguei mais de R$ 30,00:

SELECT * FROM livros WHERE valor > 30;
 
+----+--------------------+-------------------+-------+-------------+
| id | nome               | autor             | valor | data_compra |
+----+--------------------+-------------------+-------+-------------+
|  1 | Plataforma Java EE | Alberto Souza     | 39.90 | 2015-12-05  |
|  3 | Spring MVC         | Alberto Souza     | 45.90 | 2015-12-20  |
|  5 | REST               | Alexandre Saudate | 39.90 | 2015-01-12  |
+----+--------------------+-------------------+-------+-------------+
3 rows in set (0,00 sec)
PorÃ©m, agora eu queria saber quanto gastei com todos os livros que paguei acima de R$ 30,00. Ou seja, quero fazer uma soma! Como podemos fazer isso no SQL?
Ã‰ muito simples: jÃ¡ existem funÃ§Ãµes prÃ©-definidas pelos bancos de dados realizar cÃ¡lculos. Podemos, por exemplo, usar a funÃ§Ã£o SUM para somar:

SELECT SUM(valor) AS total FROM livros WHERE valor > 30;
 
+--------+
| total  |
+--------+
| 125.70 |
+--------+
1 row in set (0,00 sec)
Essas funÃ§Ãµes sÃ£o chamadas de funÃ§Ãµes de agregaÃ§Ã£o. Elas agrupam todas as linhas encontradas e retornam apenas uma Ãºnica linha com o resultado da operaÃ§Ã£o solicitada. Nesse caso, uma soma ğŸ™‚

Consegui verificar o quanto gastei com livros acima de R$ 30,00, mas agora eu preciso saber o quanto gastei por mÃªs!
Na minha tabela as datas sÃ£o completas, ou seja: tem dia, mÃªs e ano. Mas, nesse caso, preciso apenas do mÃªsâ€¦como podemos retornar apenas o mesmo de uma data?
Simples! Da mesma forma que o banco de dados forneceu uma funÃ§Ã£o para somar, ele tambÃ©m fornece uma funÃ§Ã£o para devolver o mÃªs de uma data!
Utilizamos o MONTH() que extrai o mÃªs de uma determinada data:

SELECT nome, valor, MONTH(data_compra) AS mÃªs FROM livros;
 
+--------------------+-------+------+
| nome               | valor | mÃªs  |
+--------------------+-------+------+
| Plataforma Java EE | 39.90 |   12 |
| Google Android     | 25.90 |   12 |
| Spring MVC         | 45.90 |   12 |
| A Web Mobile       | 26.90 |    1 |
| REST               | 39.90 |    1 |
| SQL                | 23.90 |   12 |
+--------------------+-------+------+
6 rows in set (0,00 sec)
EntÃ£o, agora que sabemos como somar e como pegar o mÃªs, basta juntar as duas funÃ§Ãµes! Vamos fazer nossa nova query:

SELECT SUM(valor) AS total, MONTH(data_compra) AS mÃªs FROM livros;
 
+--------+------+
| total  | mÃªs  |
+--------+------+
| 202.40 |   12 |
+--------+------+
1 row in set (0,00 sec)
UÃ©, apenas mÃªs 12? E R$ 202,40 apenas no mÃªs 12? Eu tenho quase certeza que nÃ£o foi tudo isso. Vamos filtrar essa query para retornar apenas os livros comprados no mÃªs 12:

SELECT SUM(valor) AS total, MONTH(data_compra) AS mÃªs FROM livros
WHERE MONTH(data_compra) = 12;
 
+--------+------+
| total  | mÃªs  |
+--------+------+
| 135.60 |   12 |
+--------+------+
1 row in set (0,00 sec)
O que serÃ¡ que estÃ¡ acontecendo? SerÃ¡ que nÃ£o podemos exibir mais de uma linha com uma funÃ§Ã£o de agregaÃ§Ã£o?
Muito estranho isso.
Como vimos, as funÃ§Ãµes de agregaÃ§Ã£o a princÃ­pio retornam apenas uma Ãºnica linha. O que precisamos fazer Ã© informar que queremos agrupar as linhas por mÃªs soma-las!
Para isso, utilizaremos a instruÃ§Ã£o GROUP BY informando qual coluna queremos que seja agrupada:

SELECT SUM(valor) AS total, MONTH(data_compra) AS mÃªs FROM livros
GROUP BY MONTH(data_compra);
 
+--------+------+
| total  | mÃªs  |
+--------+------+
|  66.80 |    1 |
| 135.60 |   12 |
+--------+------+
2 rows in set (0,00 sec)
Excelente, veja que agora conseguimos verificar quanto foi gasto por mÃªs!

Vimos que quando utilizamos funÃ§Ãµes de agregaÃ§Ã£o(como SUM()) por padrÃ£o o branco nos retorna apenas uma Ãºnica linha com o resultado de todas as linhas que foram encontradas. Mas, se quisermos que a funÃ§Ã£o agrupe por diferente de uma outra coluna(como o mÃªs), precisamos informar que essa coluna serÃ¡ agrupada utilizando a instruÃ§Ã£o GROUP BY.

E aÃ­, gostou da funÃ§Ã£o SUM() e o GROUP BY? EstÃ¡ pronto para utilizÃ¡-la em seu banco de dados?
O que acha aprender mais funÃ§Ãµes de agregaÃ§Ã£o para criar queries mais robustas e inteligentes? Temos vÃ¡rios cursos de SQL no Alura para que vocÃª aprenda desde queries mais bÃ¡sicas atÃ© as mais complexas!
